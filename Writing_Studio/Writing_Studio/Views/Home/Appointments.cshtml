@model Writing_Studio.Models.AppointmentsViewModel
    {
@{
    ViewBag.Title = "Appointments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Schedule Appointment</h2>
@using (Html.BeginForm("Appointments", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
   
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Time, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Time, new { @class = "form-control" })
            <small>Format- hh:mm AM/PM (EX- 10:00 AM)</small>
        </div>
        
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Submit" />
        </div>
    </div>

}
    <center>
        @using (Html.BeginForm("Appointments", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <input type="file" name="File" id="File" />
            <input type="submit" value="Upload" />
            
            <button><a href="~/Content/Essay.docx">View Upload</a></button>
        }
        <p>Please upload your word document</p>
    </center>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
